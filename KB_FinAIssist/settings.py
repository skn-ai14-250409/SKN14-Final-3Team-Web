"""
Django settings for KB_FinAIssist project.

Generated by 'django-admin startproject' using Django 5.2.5.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""

from pathlib import Path
import os
from dotenv import load_dotenv
import config  

load_dotenv()

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent
SECRET_KEY = os.getenv('SECRET_KEY')

# 개인 여신심사
PERSONAL_LOAN_LGBM_MODEL_PATH = os.path.join(BASE_DIR, "ml_models", "personal_loan_lgbm.pkl")
PERSONAL_LOAN_SCALER_PATH = os.path.join(BASE_DIR, "ml_models", "personal_loan_scaler.pkl")

# 기업 여신심사
CORPORATE_LOAN_LGBM_MODEL_PATH = os.path.join(BASE_DIR, "ml_models", "corporate_loan_lgbm.pkl")
CORPORATE_LOAN_SCALER_PATH = os.path.join(BASE_DIR, "ml_models", "corporate_loan_scaler.pkl")

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = "django-insecure-p2)a92tangx7n%9=wzr$cbi9_5u5nr#*s-v+l-%fjofp+c$+as"

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True  # 개발 환경

# DEBUG = False일 때 필요한 설정 (프로덕션용)
# ALLOWED_HOSTS = ['127.0.0.1', 'localhost']

# Application definition

INSTALLED_APPS = [
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
    # "ebhealthcheck.apps.EBHealthCheckConfig", # EB헬스체크용

    'f_user',
    'f_todo',
    'f_calendar',
    'f_chatbot',
    'f_customer',
    'f_document',
    'f_common',
    'f_loan',
    'f_login',
]

MIDDLEWARE = [
    "django.middleware.security.SecurityMiddleware",
    "whitenoise.middleware.WhiteNoiseMiddleware",  # 배포용 정적파일 서빙
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
    "f_common.middleware.AuthenticationMiddleware",  # 커스텀 인증 미들웨어
]
ROOT_URLCONF = "KB_FinAIssist.urls"

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [BASE_DIR/'templates'],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
            ],
        },
    },
]

WSGI_APPLICATION = "KB_FinAIssist.wsgi.application"


# Database
# https://docs.djangoproject.com/en/5.2/ref/settings/#databases


# MySQL 데이터베이스 설정
import pymysql
pymysql.install_as_MySQLdb()

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': config.DB_NAME,
        'USER': config.DB_USER,
        'PASSWORD': config.DB_PASSWORD,
        'HOST': config.DB_HOST,
        'PORT': config.DB_PORT,
        'OPTIONS': {
            'charset': 'utf8mb4',
        },
    }
}
print("MySQL 데이터베이스 설정을 사용합니다.")

# Password validation
# https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.2/topics/i18n/

LANGUAGE_CODE = 'ko-kr'

TIME_ZONE = 'Asia/Seoul'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.2/howto/static-files/

STATIC_URL = "/static/"
STATICFILES_DIRS = [
    BASE_DIR / 'static', 
    os.path.join(BASE_DIR, 'static'),
]

STORAGES = {
    "staticfiles": {"BACKEND": "whitenoise.storage.CompressedManifestStaticFilesStorage"}
}

STATIC_ROOT = BASE_DIR / "staticfiles"
# Default primary key field type
# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"

# X-Frame-Options 설정 (iframe 허용)
X_FRAME_OPTIONS = 'SAMEORIGIN'

# FastAPI 서버 설정
FASTAPI_URL = os.environ.get("FASTAPI_URL", "http://127.0.0.1:8001")

# FastAPI 상세 설정
FASTAPI_CONFIG = {
    'BASE_URL': FASTAPI_URL,
    'ENDPOINTS': {
        'LANGGRAPH_RAG': '/api/v1/langgraph/langgraph_rag',  # 실제 사용하는 V2 툴콜링 엔드포인트
        'HEALTH': '/health'
    },
    'TIMEOUTS': {
        'DEFAULT': 60,
        'LANGGRAPH': 60,
        'HEALTH_CHECK': 5
    },
    'REQUEST_PARAMS': {
        'PROMPT_KEY': 'prompt'
    }
}

# 로깅 설정
LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'formatters': {
        'verbose': {
            'format': '{levelname} {asctime} {module} {process:d} {thread:d} {message}',
            'style': '{',
        },
        'simple': {
            'format': '{levelname} {message}',
            'style': '{',
        },
    },
    'handlers': {
        'console': {
            'class': 'logging.StreamHandler',
            'formatter': 'simple',
        },
    },
    'loggers': {
        'f_chatbot': {
            'handlers': ['console'],
            'level': 'INFO',
            'propagate': True,
        },
        'f_loan': {
            'handlers': ['console'],
            'level': 'INFO',
            'propagate': True,
        },
    },
}

# 에러 핸들러 설정
handler403 = 'f_common.error_handlers.handler403'
handler404 = 'f_common.error_handlers.handler404'
handler500 = 'f_common.error_handlers.handler500'